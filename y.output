Grammar

    0 $accept: translation_unit $end

    1 translation_unit: definition_or_statement
    2                 | translation_unit definition_or_statement

    3 definition_or_statement: function_definition
    4                        | statement

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP RP block

    7 parameter_list: IDENTIFIER
    8               | parameter_list COMMA IDENTIFIER

    9 argument_list: assignment_expression
   10              | argument_list COMMA assignment_expression

   11 statement_list: statement
   12               | statement_list statement

   13 expression: assignment_expression
   14           | expression COMMA assignment_expression

   15 assignment_expression: logical_or_expression
   16                      | postfix_expression assignment_operator assignment_expression
   17                      | FINAL postfix_expression assignment_operator assignment_expression

   18 assignment_operator: ASSIGN_T
   19                    | ADD_ASSIGN_T
   20                    | SUB_ASSIGN_T
   21                    | MUL_ASSIGN_T
   22                    | DIV_ASSIGN_T
   23                    | MOD_ASSIGN_T

   24 logical_or_expression: logical_and_expression
   25                      | logical_or_expression LOGICAL_OR logical_and_expression

   26 logical_and_expression: equality_expression
   27                       | logical_and_expression LOGICAL_AND equality_expression

   28 equality_expression: relational_expression
   29                    | equality_expression EQ relational_expression
   30                    | equality_expression NE relational_expression

   31 relational_expression: additive_expression
   32                      | relational_expression GT additive_expression
   33                      | relational_expression GE additive_expression
   34                      | relational_expression LT additive_expression
   35                      | relational_expression LE additive_expression

   36 additive_expression: multiplicative_expression
   37                    | additive_expression ADD multiplicative_expression
   38                    | additive_expression SUB multiplicative_expression

   39 multiplicative_expression: unary_expression
   40                          | multiplicative_expression MUL unary_expression
   41                          | multiplicative_expression DIV unary_expression
   42                          | multiplicative_expression MOD unary_expression

   43 unary_expression: postfix_expression
   44                 | SUB unary_expression
   45                 | EXCLAMATION unary_expression

   46 postfix_expression: primary_expression
   47                   | postfix_expression LB expression RB
   48                   | postfix_expression DOT IDENTIFIER
   49                   | postfix_expression LP argument_list RP
   50                   | postfix_expression LP RP
   51                   | postfix_expression INCREMENT
   52                   | postfix_expression DECREMENT

   53 primary_expression: LP expression RP
   54                   | IDENTIFIER
   55                   | INT_LITERAL
   56                   | DOUBLE_LITERAL
   57                   | STRING_LITERAL
   58                   | REGEXP_LITERAL
   59                   | TRUE_T
   60                   | FALSE_T
   61                   | NULL_T
   62                   | array_literal
   63                   | closure_definition

   64 array_literal: LC expression_list RC
   65              | LC expression_list COMMA RC

   66 closure_definition: CLOSURE IDENTIFIER LP parameter_list RP block
   67                   | CLOSURE IDENTIFIER LP RP block
   68                   | CLOSURE LP parameter_list RP block
   69                   | CLOSURE LP RP block

   70 expression_list: /* empty */
   71                | assignment_expression
   72                | expression_list COMMA assignment_expression

   73 statement: expression SEMICOLON
   74          | global_statement
   75          | if_statement
   76          | while_statement
   77          | for_statement
   78          | foreach_statement
   79          | return_statement
   80          | break_statement
   81          | continue_statement
   82          | try_statement
   83          | throw_statement

   84 global_statement: GLOBAL_T identifier_list SEMICOLON

   85 identifier_list: IDENTIFIER
   86                | identifier_list COMMA IDENTIFIER

   87 if_statement: IF LP expression RP block
   88             | IF LP expression RP block ELSE block
   89             | IF LP expression RP block elsif_list
   90             | IF LP expression RP block elsif_list ELSE block

   91 elsif_list: elsif
   92           | elsif_list elsif

   93 elsif: ELSIF LP expression RP block

   94 label_opt: /* empty */
   95          | IDENTIFIER COLON

   96 while_statement: label_opt WHILE LP expression RP block

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

   98 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

   99 expression_opt: /* empty */
  100               | expression

  101 return_statement: RETURN_T expression_opt SEMICOLON

  102 identifier_opt: /* empty */
  103               | IDENTIFIER

  104 break_statement: BREAK identifier_opt SEMICOLON

  105 continue_statement: CONTINUE identifier_opt SEMICOLON

  106 try_statement: TRY block CATCH LP IDENTIFIER RP block FINALLY block
  107              | TRY block FINALLY block
  108              | TRY block CATCH LP IDENTIFIER RP block

  109 throw_statement: THROW expression SEMICOLON

  110 block: LC statement_list RC
  111      | LC RC


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 55
DOUBLE_LITERAL (259) 56
STRING_LITERAL (260) 57
REGEXP_LITERAL (261) 58
IDENTIFIER (262) 5 6 7 8 48 54 66 67 85 86 95 98 103 106 108
FUNCTION (263) 5 6
IF (264) 87 88 89 90
ELSE (265) 88 90
ELSIF (266) 93
WHILE (267) 96
FOR (268) 97
FOREACH (269) 98
RETURN_T (270) 101
BREAK (271) 104
CONTINUE (272) 105
NULL_T (273) 61
LP (274) 5 6 49 50 53 66 67 68 69 87 88 89 90 93 96 97 98 106 108
RP (275) 5 6 49 50 53 66 67 68 69 87 88 89 90 93 96 97 98 106 108
LC (276) 64 65 110 111
RC (277) 64 65 110 111
LB (278) 47
RB (279) 47
SEMICOLON (280) 73 84 97 101 104 105 109
COLON (281) 95 98
COMMA (282) 8 10 14 65 72 86
ASSIGN_T (283) 18
LOGICAL_AND (284) 27
LOGICAL_OR (285) 25
EQ (286) 29
NE (287) 30
GT (288) 32
GE (289) 33
LT (290) 34
LE (291) 35
ADD (292) 37
SUB (293) 38 44
MUL (294) 40
DIV (295) 41
MOD (296) 42
TRUE_T (297) 59
FALSE_T (298) 60
EXCLAMATION (299) 45
DOT (300) 48
ADD_ASSIGN_T (301) 19
SUB_ASSIGN_T (302) 20
MUL_ASSIGN_T (303) 21
DIV_ASSIGN_T (304) 22
MOD_ASSIGN_T (305) 23
INCREMENT (306) 51
DECREMENT (307) 52
CLOSURE (308) 66 67 68 69
GLOBAL_T (309) 84
TRY (310) 106 107 108
CATCH (311) 106 108
FINALLY (312) 106 107
THROW (313) 109
FINAL (314) 17


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
translation_unit (61)
    on left: 1 2, on right: 0 2
definition_or_statement (62)
    on left: 3 4, on right: 1 2
function_definition (63)
    on left: 5 6, on right: 3
parameter_list (64)
    on left: 7 8, on right: 5 8 66 68
argument_list (65)
    on left: 9 10, on right: 10 49
statement_list (66)
    on left: 11 12, on right: 12 110
expression (67)
    on left: 13 14, on right: 14 47 53 73 87 88 89 90 93 96 98 100
    109
assignment_expression (68)
    on left: 15 16 17, on right: 9 10 13 14 16 17 71 72
assignment_operator (69)
    on left: 18 19 20 21 22 23, on right: 16 17
logical_or_expression (70)
    on left: 24 25, on right: 15 25
logical_and_expression (71)
    on left: 26 27, on right: 24 25 27
equality_expression (72)
    on left: 28 29 30, on right: 26 27 29 30
relational_expression (73)
    on left: 31 32 33 34 35, on right: 28 29 30 32 33 34 35
additive_expression (74)
    on left: 36 37 38, on right: 31 32 33 34 35 37 38
multiplicative_expression (75)
    on left: 39 40 41 42, on right: 36 37 38 40 41 42
unary_expression (76)
    on left: 43 44 45, on right: 39 40 41 42 44 45
postfix_expression (77)
    on left: 46 47 48 49 50 51 52, on right: 16 17 43 47 48 49 50 51
    52
primary_expression (78)
    on left: 53 54 55 56 57 58 59 60 61 62 63, on right: 46
array_literal (79)
    on left: 64 65, on right: 62
closure_definition (80)
    on left: 66 67 68 69, on right: 63
expression_list (81)
    on left: 70 71 72, on right: 64 65 72
statement (82)
    on left: 73 74 75 76 77 78 79 80 81 82 83, on right: 4 11 12
global_statement (83)
    on left: 84, on right: 74
identifier_list (84)
    on left: 85 86, on right: 84 86
if_statement (85)
    on left: 87 88 89 90, on right: 75
elsif_list (86)
    on left: 91 92, on right: 89 90 92
elsif (87)
    on left: 93, on right: 91 92
label_opt (88)
    on left: 94 95, on right: 96 97 98
while_statement (89)
    on left: 96, on right: 76
for_statement (90)
    on left: 97, on right: 77
foreach_statement (91)
    on left: 98, on right: 78
expression_opt (92)
    on left: 99 100, on right: 97 101
return_statement (93)
    on left: 101, on right: 79
identifier_opt (94)
    on left: 102 103, on right: 104 105
break_statement (95)
    on left: 104, on right: 80
continue_statement (96)
    on left: 105, on right: 81
try_statement (97)
    on left: 106 107 108, on right: 82
throw_statement (98)
    on left: 109, on right: 83
block (99)
    on left: 110 111, on right: 5 6 66 67 68 69 87 88 89 90 93 96 97
    98 106 107 108


state 0

    0 $accept: . translation_unit $end

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    FUNCTION        shift, and go to state 6
    IF              shift, and go to state 7
    RETURN_T        shift, and go to state 8
    BREAK           shift, and go to state 9
    CONTINUE        shift, and go to state 10
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    TRY             shift, and go to state 20
    THROW           shift, and go to state 21
    FINAL           shift, and go to state 22

    $default  reduce using rule 94 (label_opt)

    translation_unit           go to state 23
    definition_or_statement    go to state 24
    function_definition        go to state 25
    expression                 go to state 26
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    statement                  go to state 39
    global_statement           go to state 40
    if_statement               go to state 41
    label_opt                  go to state 42
    while_statement            go to state 43
    for_statement              go to state 44
    foreach_statement          go to state 45
    return_statement           go to state 46
    break_statement            go to state 47
    continue_statement         go to state 48
    try_statement              go to state 49
    throw_statement            go to state 50


state 1

   55 primary_expression: INT_LITERAL .

    $default  reduce using rule 55 (primary_expression)


state 2

   56 primary_expression: DOUBLE_LITERAL .

    $default  reduce using rule 56 (primary_expression)


state 3

   57 primary_expression: STRING_LITERAL .

    $default  reduce using rule 57 (primary_expression)


state 4

   58 primary_expression: REGEXP_LITERAL .

    $default  reduce using rule 58 (primary_expression)


state 5

   54 primary_expression: IDENTIFIER .
   95 label_opt: IDENTIFIER . COLON

    COLON  shift, and go to state 51

    $default  reduce using rule 54 (primary_expression)


state 6

    5 function_definition: FUNCTION . IDENTIFIER LP parameter_list RP block
    6                    | FUNCTION . IDENTIFIER LP RP block

    IDENTIFIER  shift, and go to state 52


state 7

   87 if_statement: IF . LP expression RP block
   88             | IF . LP expression RP block ELSE block
   89             | IF . LP expression RP block elsif_list
   90             | IF . LP expression RP block elsif_list ELSE block

    LP  shift, and go to state 53


state 8

  101 return_statement: RETURN_T . expression_opt SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    $default  reduce using rule 99 (expression_opt)

    expression                 go to state 55
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    expression_opt             go to state 56


state 9

  104 break_statement: BREAK . identifier_opt SEMICOLON

    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 102 (identifier_opt)

    identifier_opt  go to state 58


state 10

  105 continue_statement: CONTINUE . identifier_opt SEMICOLON

    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 102 (identifier_opt)

    identifier_opt  go to state 59


state 11

   61 primary_expression: NULL_T .

    $default  reduce using rule 61 (primary_expression)


state 12

   53 primary_expression: LP . expression RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 60
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 13

   64 array_literal: LC . expression_list RC
   65              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    $default  reduce using rule 70 (expression_list)

    assignment_expression      go to state 61
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    expression_list            go to state 62


state 14

   44 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    unary_expression    go to state 63
    postfix_expression  go to state 64
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 15

   59 primary_expression: TRUE_T .

    $default  reduce using rule 59 (primary_expression)


state 16

   60 primary_expression: FALSE_T .

    $default  reduce using rule 60 (primary_expression)


state 17

   45 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    unary_expression    go to state 65
    postfix_expression  go to state 64
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 18

   66 closure_definition: CLOSURE . IDENTIFIER LP parameter_list RP block
   67                   | CLOSURE . IDENTIFIER LP RP block
   68                   | CLOSURE . LP parameter_list RP block
   69                   | CLOSURE . LP RP block

    IDENTIFIER  shift, and go to state 66
    LP          shift, and go to state 67


state 19

   84 global_statement: GLOBAL_T . identifier_list SEMICOLON

    IDENTIFIER  shift, and go to state 68

    identifier_list  go to state 69


state 20

  106 try_statement: TRY . block CATCH LP IDENTIFIER RP block FINALLY block
  107              | TRY . block FINALLY block
  108              | TRY . block CATCH LP IDENTIFIER RP block

    LC  shift, and go to state 70

    block  go to state 71


state 21

  109 throw_statement: THROW . expression SEMICOLON

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 72
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 22

   17 assignment_expression: FINAL . postfix_expression assignment_operator assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    CLOSURE         shift, and go to state 18

    postfix_expression  go to state 73
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 23

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 74
    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    FUNCTION        shift, and go to state 6
    IF              shift, and go to state 7
    RETURN_T        shift, and go to state 8
    BREAK           shift, and go to state 9
    CONTINUE        shift, and go to state 10
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    TRY             shift, and go to state 20
    THROW           shift, and go to state 21
    FINAL           shift, and go to state 22

    $default  reduce using rule 94 (label_opt)

    definition_or_statement    go to state 75
    function_definition        go to state 25
    expression                 go to state 26
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    statement                  go to state 39
    global_statement           go to state 40
    if_statement               go to state 41
    label_opt                  go to state 42
    while_statement            go to state 43
    for_statement              go to state 44
    foreach_statement          go to state 45
    return_statement           go to state 46
    break_statement            go to state 47
    continue_statement         go to state 48
    try_statement              go to state 49
    throw_statement            go to state 50


state 24

    1 translation_unit: definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 25

    3 definition_or_statement: function_definition .

    $default  reduce using rule 3 (definition_or_statement)


state 26

   14 expression: expression . COMMA assignment_expression
   73 statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 76
    COMMA      shift, and go to state 77


state 27

   13 expression: assignment_expression .

    $default  reduce using rule 13 (expression)


state 28

   15 assignment_expression: logical_or_expression .
   25 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 78

    $default  reduce using rule 15 (assignment_expression)


state 29

   24 logical_or_expression: logical_and_expression .
   27 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 79

    $default  reduce using rule 24 (logical_or_expression)


state 30

   26 logical_and_expression: equality_expression .
   29 equality_expression: equality_expression . EQ relational_expression
   30                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 80
    NE  shift, and go to state 81

    $default  reduce using rule 26 (logical_and_expression)


state 31

   28 equality_expression: relational_expression .
   32 relational_expression: relational_expression . GT additive_expression
   33                      | relational_expression . GE additive_expression
   34                      | relational_expression . LT additive_expression
   35                      | relational_expression . LE additive_expression

    GT  shift, and go to state 82
    GE  shift, and go to state 83
    LT  shift, and go to state 84
    LE  shift, and go to state 85

    $default  reduce using rule 28 (equality_expression)


state 32

   31 relational_expression: additive_expression .
   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 31 (relational_expression)


state 33

   36 additive_expression: multiplicative_expression .
   40 multiplicative_expression: multiplicative_expression . MUL unary_expression
   41                          | multiplicative_expression . DIV unary_expression
   42                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89
    MOD  shift, and go to state 90

    $default  reduce using rule 36 (additive_expression)


state 34

   39 multiplicative_expression: unary_expression .

    $default  reduce using rule 39 (multiplicative_expression)


state 35

   16 assignment_expression: postfix_expression . assignment_operator assignment_expression
   43 unary_expression: postfix_expression .
   47 postfix_expression: postfix_expression . LB expression RB
   48                   | postfix_expression . DOT IDENTIFIER
   49                   | postfix_expression . LP argument_list RP
   50                   | postfix_expression . LP RP
   51                   | postfix_expression . INCREMENT
   52                   | postfix_expression . DECREMENT

    LP            shift, and go to state 91
    LB            shift, and go to state 92
    ASSIGN_T      shift, and go to state 93
    DOT           shift, and go to state 94
    ADD_ASSIGN_T  shift, and go to state 95
    SUB_ASSIGN_T  shift, and go to state 96
    MUL_ASSIGN_T  shift, and go to state 97
    DIV_ASSIGN_T  shift, and go to state 98
    MOD_ASSIGN_T  shift, and go to state 99
    INCREMENT     shift, and go to state 100
    DECREMENT     shift, and go to state 101

    $default  reduce using rule 43 (unary_expression)

    assignment_operator  go to state 102


state 36

   46 postfix_expression: primary_expression .

    $default  reduce using rule 46 (postfix_expression)


state 37

   62 primary_expression: array_literal .

    $default  reduce using rule 62 (primary_expression)


state 38

   63 primary_expression: closure_definition .

    $default  reduce using rule 63 (primary_expression)


state 39

    4 definition_or_statement: statement .

    $default  reduce using rule 4 (definition_or_statement)


state 40

   74 statement: global_statement .

    $default  reduce using rule 74 (statement)


state 41

   75 statement: if_statement .

    $default  reduce using rule 75 (statement)


state 42

   96 while_statement: label_opt . WHILE LP expression RP block
   97 for_statement: label_opt . FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block
   98 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 103
    FOR      shift, and go to state 104
    FOREACH  shift, and go to state 105


state 43

   76 statement: while_statement .

    $default  reduce using rule 76 (statement)


state 44

   77 statement: for_statement .

    $default  reduce using rule 77 (statement)


state 45

   78 statement: foreach_statement .

    $default  reduce using rule 78 (statement)


state 46

   79 statement: return_statement .

    $default  reduce using rule 79 (statement)


state 47

   80 statement: break_statement .

    $default  reduce using rule 80 (statement)


state 48

   81 statement: continue_statement .

    $default  reduce using rule 81 (statement)


state 49

   82 statement: try_statement .

    $default  reduce using rule 82 (statement)


state 50

   83 statement: throw_statement .

    $default  reduce using rule 83 (statement)


state 51

   95 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 95 (label_opt)


state 52

    5 function_definition: FUNCTION IDENTIFIER . LP parameter_list RP block
    6                    | FUNCTION IDENTIFIER . LP RP block

    LP  shift, and go to state 106


state 53

   87 if_statement: IF LP . expression RP block
   88             | IF LP . expression RP block ELSE block
   89             | IF LP . expression RP block elsif_list
   90             | IF LP . expression RP block elsif_list ELSE block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 107
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 54

   54 primary_expression: IDENTIFIER .

    $default  reduce using rule 54 (primary_expression)


state 55

   14 expression: expression . COMMA assignment_expression
  100 expression_opt: expression .

    COMMA  shift, and go to state 77

    $default  reduce using rule 100 (expression_opt)


state 56

  101 return_statement: RETURN_T expression_opt . SEMICOLON

    SEMICOLON  shift, and go to state 108


state 57

  103 identifier_opt: IDENTIFIER .

    $default  reduce using rule 103 (identifier_opt)


state 58

  104 break_statement: BREAK identifier_opt . SEMICOLON

    SEMICOLON  shift, and go to state 109


state 59

  105 continue_statement: CONTINUE identifier_opt . SEMICOLON

    SEMICOLON  shift, and go to state 110


state 60

   14 expression: expression . COMMA assignment_expression
   53 primary_expression: LP expression . RP

    RP     shift, and go to state 111
    COMMA  shift, and go to state 77


state 61

   71 expression_list: assignment_expression .

    $default  reduce using rule 71 (expression_list)


state 62

   64 array_literal: LC expression_list . RC
   65              | LC expression_list . COMMA RC
   72 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 112
    COMMA  shift, and go to state 113


state 63

   44 unary_expression: SUB unary_expression .

    $default  reduce using rule 44 (unary_expression)


state 64

   43 unary_expression: postfix_expression .
   47 postfix_expression: postfix_expression . LB expression RB
   48                   | postfix_expression . DOT IDENTIFIER
   49                   | postfix_expression . LP argument_list RP
   50                   | postfix_expression . LP RP
   51                   | postfix_expression . INCREMENT
   52                   | postfix_expression . DECREMENT

    LP         shift, and go to state 91
    LB         shift, and go to state 92
    DOT        shift, and go to state 94
    INCREMENT  shift, and go to state 100
    DECREMENT  shift, and go to state 101

    $default  reduce using rule 43 (unary_expression)


state 65

   45 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 45 (unary_expression)


state 66

   66 closure_definition: CLOSURE IDENTIFIER . LP parameter_list RP block
   67                   | CLOSURE IDENTIFIER . LP RP block

    LP  shift, and go to state 114


state 67

   68 closure_definition: CLOSURE LP . parameter_list RP block
   69                   | CLOSURE LP . RP block

    IDENTIFIER  shift, and go to state 115
    RP          shift, and go to state 116

    parameter_list  go to state 117


state 68

   85 identifier_list: IDENTIFIER .

    $default  reduce using rule 85 (identifier_list)


state 69

   84 global_statement: GLOBAL_T identifier_list . SEMICOLON
   86 identifier_list: identifier_list . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 118
    COMMA      shift, and go to state 119


state 70

  110 block: LC . statement_list RC
  111      | LC . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    IF              shift, and go to state 7
    RETURN_T        shift, and go to state 8
    BREAK           shift, and go to state 9
    CONTINUE        shift, and go to state 10
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    RC              shift, and go to state 120
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    TRY             shift, and go to state 20
    THROW           shift, and go to state 21
    FINAL           shift, and go to state 22

    $default  reduce using rule 94 (label_opt)

    statement_list             go to state 121
    expression                 go to state 26
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    statement                  go to state 122
    global_statement           go to state 40
    if_statement               go to state 41
    label_opt                  go to state 42
    while_statement            go to state 43
    for_statement              go to state 44
    foreach_statement          go to state 45
    return_statement           go to state 46
    break_statement            go to state 47
    continue_statement         go to state 48
    try_statement              go to state 49
    throw_statement            go to state 50


state 71

  106 try_statement: TRY block . CATCH LP IDENTIFIER RP block FINALLY block
  107              | TRY block . FINALLY block
  108              | TRY block . CATCH LP IDENTIFIER RP block

    CATCH    shift, and go to state 123
    FINALLY  shift, and go to state 124


state 72

   14 expression: expression . COMMA assignment_expression
  109 throw_statement: THROW expression . SEMICOLON

    SEMICOLON  shift, and go to state 125
    COMMA      shift, and go to state 77


state 73

   17 assignment_expression: FINAL postfix_expression . assignment_operator assignment_expression
   47 postfix_expression: postfix_expression . LB expression RB
   48                   | postfix_expression . DOT IDENTIFIER
   49                   | postfix_expression . LP argument_list RP
   50                   | postfix_expression . LP RP
   51                   | postfix_expression . INCREMENT
   52                   | postfix_expression . DECREMENT

    LP            shift, and go to state 91
    LB            shift, and go to state 92
    ASSIGN_T      shift, and go to state 93
    DOT           shift, and go to state 94
    ADD_ASSIGN_T  shift, and go to state 95
    SUB_ASSIGN_T  shift, and go to state 96
    MUL_ASSIGN_T  shift, and go to state 97
    DIV_ASSIGN_T  shift, and go to state 98
    MOD_ASSIGN_T  shift, and go to state 99
    INCREMENT     shift, and go to state 100
    DECREMENT     shift, and go to state 101

    assignment_operator  go to state 126


state 74

    0 $accept: translation_unit $end .

    $default  accept


state 75

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 76

   73 statement: expression SEMICOLON .

    $default  reduce using rule 73 (statement)


state 77

   14 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    assignment_expression      go to state 127
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 78

   25 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    logical_and_expression     go to state 128
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 79

   27 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    equality_expression        go to state 129
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 80

   29 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    relational_expression      go to state 130
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 81

   30 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    relational_expression      go to state 131
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 82

   32 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    additive_expression        go to state 132
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 83

   33 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    additive_expression        go to state 133
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 84

   34 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    additive_expression        go to state 134
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 85

   35 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    additive_expression        go to state 135
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 86

   37 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    multiplicative_expression  go to state 136
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 87

   38 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    multiplicative_expression  go to state 137
    unary_expression           go to state 34
    postfix_expression         go to state 64
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 88

   40 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    unary_expression    go to state 138
    postfix_expression  go to state 64
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 89

   41 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    unary_expression    go to state 139
    postfix_expression  go to state 64
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 90

   42 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18

    unary_expression    go to state 140
    postfix_expression  go to state 64
    primary_expression  go to state 36
    array_literal       go to state 37
    closure_definition  go to state 38


state 91

   49 postfix_expression: postfix_expression LP . argument_list RP
   50                   | postfix_expression LP . RP

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    RP              shift, and go to state 141
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    argument_list              go to state 142
    assignment_expression      go to state 143
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 92

   47 postfix_expression: postfix_expression LB . expression RB

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 144
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 93

   18 assignment_operator: ASSIGN_T .

    $default  reduce using rule 18 (assignment_operator)


state 94

   48 postfix_expression: postfix_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 145


state 95

   19 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 19 (assignment_operator)


state 96

   20 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 20 (assignment_operator)


state 97

   21 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 21 (assignment_operator)


state 98

   22 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 22 (assignment_operator)


state 99

   23 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 23 (assignment_operator)


state 100

   51 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 51 (postfix_expression)


state 101

   52 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 52 (postfix_expression)


state 102

   16 assignment_expression: postfix_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    assignment_expression      go to state 146
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 103

   96 while_statement: label_opt WHILE . LP expression RP block

    LP  shift, and go to state 147


state 104

   97 for_statement: label_opt FOR . LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    LP  shift, and go to state 148


state 105

   98 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 149


state 106

    5 function_definition: FUNCTION IDENTIFIER LP . parameter_list RP block
    6                    | FUNCTION IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 115
    RP          shift, and go to state 150

    parameter_list  go to state 151


state 107

   14 expression: expression . COMMA assignment_expression
   87 if_statement: IF LP expression . RP block
   88             | IF LP expression . RP block ELSE block
   89             | IF LP expression . RP block elsif_list
   90             | IF LP expression . RP block elsif_list ELSE block

    RP     shift, and go to state 152
    COMMA  shift, and go to state 77


state 108

  101 return_statement: RETURN_T expression_opt SEMICOLON .

    $default  reduce using rule 101 (return_statement)


state 109

  104 break_statement: BREAK identifier_opt SEMICOLON .

    $default  reduce using rule 104 (break_statement)


state 110

  105 continue_statement: CONTINUE identifier_opt SEMICOLON .

    $default  reduce using rule 105 (continue_statement)


state 111

   53 primary_expression: LP expression RP .

    $default  reduce using rule 53 (primary_expression)


state 112

   64 array_literal: LC expression_list RC .

    $default  reduce using rule 64 (array_literal)


state 113

   65 array_literal: LC expression_list COMMA . RC
   72 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    RC              shift, and go to state 153
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    assignment_expression      go to state 154
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 114

   66 closure_definition: CLOSURE IDENTIFIER LP . parameter_list RP block
   67                   | CLOSURE IDENTIFIER LP . RP block

    IDENTIFIER  shift, and go to state 115
    RP          shift, and go to state 155

    parameter_list  go to state 156


state 115

    7 parameter_list: IDENTIFIER .

    $default  reduce using rule 7 (parameter_list)


state 116

   69 closure_definition: CLOSURE LP RP . block

    LC  shift, and go to state 70

    block  go to state 157


state 117

    8 parameter_list: parameter_list . COMMA IDENTIFIER
   68 closure_definition: CLOSURE LP parameter_list . RP block

    RP     shift, and go to state 158
    COMMA  shift, and go to state 159


state 118

   84 global_statement: GLOBAL_T identifier_list SEMICOLON .

    $default  reduce using rule 84 (global_statement)


state 119

   86 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 160


state 120

  111 block: LC RC .

    $default  reduce using rule 111 (block)


state 121

   12 statement_list: statement_list . statement
  110 block: LC statement_list . RC

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 5
    IF              shift, and go to state 7
    RETURN_T        shift, and go to state 8
    BREAK           shift, and go to state 9
    CONTINUE        shift, and go to state 10
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    RC              shift, and go to state 161
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    GLOBAL_T        shift, and go to state 19
    TRY             shift, and go to state 20
    THROW           shift, and go to state 21
    FINAL           shift, and go to state 22

    $default  reduce using rule 94 (label_opt)

    expression                 go to state 26
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    statement                  go to state 162
    global_statement           go to state 40
    if_statement               go to state 41
    label_opt                  go to state 42
    while_statement            go to state 43
    for_statement              go to state 44
    foreach_statement          go to state 45
    return_statement           go to state 46
    break_statement            go to state 47
    continue_statement         go to state 48
    try_statement              go to state 49
    throw_statement            go to state 50


state 122

   11 statement_list: statement .

    $default  reduce using rule 11 (statement_list)


state 123

  106 try_statement: TRY block CATCH . LP IDENTIFIER RP block FINALLY block
  108              | TRY block CATCH . LP IDENTIFIER RP block

    LP  shift, and go to state 163


state 124

  107 try_statement: TRY block FINALLY . block

    LC  shift, and go to state 70

    block  go to state 164


state 125

  109 throw_statement: THROW expression SEMICOLON .

    $default  reduce using rule 109 (throw_statement)


state 126

   17 assignment_expression: FINAL postfix_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    assignment_expression      go to state 165
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 127

   14 expression: expression COMMA assignment_expression .

    $default  reduce using rule 14 (expression)


state 128

   25 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   27 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 79

    $default  reduce using rule 25 (logical_or_expression)


state 129

   27 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   29 equality_expression: equality_expression . EQ relational_expression
   30                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 80
    NE  shift, and go to state 81

    $default  reduce using rule 27 (logical_and_expression)


state 130

   29 equality_expression: equality_expression EQ relational_expression .
   32 relational_expression: relational_expression . GT additive_expression
   33                      | relational_expression . GE additive_expression
   34                      | relational_expression . LT additive_expression
   35                      | relational_expression . LE additive_expression

    GT  shift, and go to state 82
    GE  shift, and go to state 83
    LT  shift, and go to state 84
    LE  shift, and go to state 85

    $default  reduce using rule 29 (equality_expression)


state 131

   30 equality_expression: equality_expression NE relational_expression .
   32 relational_expression: relational_expression . GT additive_expression
   33                      | relational_expression . GE additive_expression
   34                      | relational_expression . LT additive_expression
   35                      | relational_expression . LE additive_expression

    GT  shift, and go to state 82
    GE  shift, and go to state 83
    LT  shift, and go to state 84
    LE  shift, and go to state 85

    $default  reduce using rule 30 (equality_expression)


state 132

   32 relational_expression: relational_expression GT additive_expression .
   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 32 (relational_expression)


state 133

   33 relational_expression: relational_expression GE additive_expression .
   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 33 (relational_expression)


state 134

   34 relational_expression: relational_expression LT additive_expression .
   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 34 (relational_expression)


state 135

   35 relational_expression: relational_expression LE additive_expression .
   37 additive_expression: additive_expression . ADD multiplicative_expression
   38                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 35 (relational_expression)


state 136

   37 additive_expression: additive_expression ADD multiplicative_expression .
   40 multiplicative_expression: multiplicative_expression . MUL unary_expression
   41                          | multiplicative_expression . DIV unary_expression
   42                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89
    MOD  shift, and go to state 90

    $default  reduce using rule 37 (additive_expression)


state 137

   38 additive_expression: additive_expression SUB multiplicative_expression .
   40 multiplicative_expression: multiplicative_expression . MUL unary_expression
   41                          | multiplicative_expression . DIV unary_expression
   42                          | multiplicative_expression . MOD unary_expression

    MUL  shift, and go to state 88
    DIV  shift, and go to state 89
    MOD  shift, and go to state 90

    $default  reduce using rule 38 (additive_expression)


state 138

   40 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 40 (multiplicative_expression)


state 139

   41 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 41 (multiplicative_expression)


state 140

   42 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 42 (multiplicative_expression)


state 141

   50 postfix_expression: postfix_expression LP RP .

    $default  reduce using rule 50 (postfix_expression)


state 142

   10 argument_list: argument_list . COMMA assignment_expression
   49 postfix_expression: postfix_expression LP argument_list . RP

    RP     shift, and go to state 166
    COMMA  shift, and go to state 167


state 143

    9 argument_list: assignment_expression .

    $default  reduce using rule 9 (argument_list)


state 144

   14 expression: expression . COMMA assignment_expression
   47 postfix_expression: postfix_expression LB expression . RB

    RB     shift, and go to state 168
    COMMA  shift, and go to state 77


state 145

   48 postfix_expression: postfix_expression DOT IDENTIFIER .

    $default  reduce using rule 48 (postfix_expression)


state 146

   16 assignment_expression: postfix_expression assignment_operator assignment_expression .

    $default  reduce using rule 16 (assignment_expression)


state 147

   96 while_statement: label_opt WHILE LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 169
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 148

   97 for_statement: label_opt FOR LP . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    $default  reduce using rule 99 (expression_opt)

    expression                 go to state 55
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    expression_opt             go to state 170


state 149

   98 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 171


state 150

    6 function_definition: FUNCTION IDENTIFIER LP RP . block

    LC  shift, and go to state 70

    block  go to state 172


state 151

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list . RP block
    8 parameter_list: parameter_list . COMMA IDENTIFIER

    RP     shift, and go to state 173
    COMMA  shift, and go to state 159


state 152

   87 if_statement: IF LP expression RP . block
   88             | IF LP expression RP . block ELSE block
   89             | IF LP expression RP . block elsif_list
   90             | IF LP expression RP . block elsif_list ELSE block

    LC  shift, and go to state 70

    block  go to state 174


state 153

   65 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 65 (array_literal)


state 154

   72 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 72 (expression_list)


state 155

   67 closure_definition: CLOSURE IDENTIFIER LP RP . block

    LC  shift, and go to state 70

    block  go to state 175


state 156

    8 parameter_list: parameter_list . COMMA IDENTIFIER
   66 closure_definition: CLOSURE IDENTIFIER LP parameter_list . RP block

    RP     shift, and go to state 176
    COMMA  shift, and go to state 159


state 157

   69 closure_definition: CLOSURE LP RP block .

    $default  reduce using rule 69 (closure_definition)


state 158

   68 closure_definition: CLOSURE LP parameter_list RP . block

    LC  shift, and go to state 70

    block  go to state 177


state 159

    8 parameter_list: parameter_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 178


state 160

   86 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 86 (identifier_list)


state 161

  110 block: LC statement_list RC .

    $default  reduce using rule 110 (block)


state 162

   12 statement_list: statement_list statement .

    $default  reduce using rule 12 (statement_list)


state 163

  106 try_statement: TRY block CATCH LP . IDENTIFIER RP block FINALLY block
  108              | TRY block CATCH LP . IDENTIFIER RP block

    IDENTIFIER  shift, and go to state 179


state 164

  107 try_statement: TRY block FINALLY block .

    $default  reduce using rule 107 (try_statement)


state 165

   17 assignment_expression: FINAL postfix_expression assignment_operator assignment_expression .

    $default  reduce using rule 17 (assignment_expression)


state 166

   49 postfix_expression: postfix_expression LP argument_list RP .

    $default  reduce using rule 49 (postfix_expression)


state 167

   10 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    assignment_expression      go to state 180
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 168

   47 postfix_expression: postfix_expression LB expression RB .

    $default  reduce using rule 47 (postfix_expression)


state 169

   14 expression: expression . COMMA assignment_expression
   96 while_statement: label_opt WHILE LP expression . RP block

    RP     shift, and go to state 181
    COMMA  shift, and go to state 77


state 170

   97 for_statement: label_opt FOR LP expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 182


state 171

   98 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 183


state 172

    6 function_definition: FUNCTION IDENTIFIER LP RP block .

    $default  reduce using rule 6 (function_definition)


state 173

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 70

    block  go to state 184


state 174

   87 if_statement: IF LP expression RP block .
   88             | IF LP expression RP block . ELSE block
   89             | IF LP expression RP block . elsif_list
   90             | IF LP expression RP block . elsif_list ELSE block

    ELSE   shift, and go to state 185
    ELSIF  shift, and go to state 186

    $default  reduce using rule 87 (if_statement)

    elsif_list  go to state 187
    elsif       go to state 188


state 175

   67 closure_definition: CLOSURE IDENTIFIER LP RP block .

    $default  reduce using rule 67 (closure_definition)


state 176

   66 closure_definition: CLOSURE IDENTIFIER LP parameter_list RP . block

    LC  shift, and go to state 70

    block  go to state 189


state 177

   68 closure_definition: CLOSURE LP parameter_list RP block .

    $default  reduce using rule 68 (closure_definition)


state 178

    8 parameter_list: parameter_list COMMA IDENTIFIER .

    $default  reduce using rule 8 (parameter_list)


state 179

  106 try_statement: TRY block CATCH LP IDENTIFIER . RP block FINALLY block
  108              | TRY block CATCH LP IDENTIFIER . RP block

    RP  shift, and go to state 190


state 180

   10 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 10 (argument_list)


state 181

   96 while_statement: label_opt WHILE LP expression RP . block

    LC  shift, and go to state 70

    block  go to state 191


state 182

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    $default  reduce using rule 99 (expression_opt)

    expression                 go to state 55
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    expression_opt             go to state 192


state 183

   98 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 193
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 184

    5 function_definition: FUNCTION IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 5 (function_definition)


state 185

   88 if_statement: IF LP expression RP block ELSE . block

    LC  shift, and go to state 70

    block  go to state 194


state 186

   93 elsif: ELSIF . LP expression RP block

    LP  shift, and go to state 195


state 187

   89 if_statement: IF LP expression RP block elsif_list .
   90             | IF LP expression RP block elsif_list . ELSE block
   92 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 196
    ELSIF  shift, and go to state 186

    $default  reduce using rule 89 (if_statement)

    elsif  go to state 197


state 188

   91 elsif_list: elsif .

    $default  reduce using rule 91 (elsif_list)


state 189

   66 closure_definition: CLOSURE IDENTIFIER LP parameter_list RP block .

    $default  reduce using rule 66 (closure_definition)


state 190

  106 try_statement: TRY block CATCH LP IDENTIFIER RP . block FINALLY block
  108              | TRY block CATCH LP IDENTIFIER RP . block

    LC  shift, and go to state 70

    block  go to state 198


state 191

   96 while_statement: label_opt WHILE LP expression RP block .

    $default  reduce using rule 96 (while_statement)


state 192

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt RP block

    SEMICOLON  shift, and go to state 199


state 193

   14 expression: expression . COMMA assignment_expression
   98 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 200
    COMMA  shift, and go to state 77


state 194

   88 if_statement: IF LP expression RP block ELSE block .

    $default  reduce using rule 88 (if_statement)


state 195

   93 elsif: ELSIF LP . expression RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    expression                 go to state 201
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38


state 196

   90 if_statement: IF LP expression RP block elsif_list ELSE . block

    LC  shift, and go to state 70

    block  go to state 202


state 197

   92 elsif_list: elsif_list elsif .

    $default  reduce using rule 92 (elsif_list)


state 198

  106 try_statement: TRY block CATCH LP IDENTIFIER RP block . FINALLY block
  108              | TRY block CATCH LP IDENTIFIER RP block .

    FINALLY  shift, and go to state 203

    $default  reduce using rule 108 (try_statement)


state 199

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt RP block

    INT_LITERAL     shift, and go to state 1
    DOUBLE_LITERAL  shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    REGEXP_LITERAL  shift, and go to state 4
    IDENTIFIER      shift, and go to state 54
    NULL_T          shift, and go to state 11
    LP              shift, and go to state 12
    LC              shift, and go to state 13
    SUB             shift, and go to state 14
    TRUE_T          shift, and go to state 15
    FALSE_T         shift, and go to state 16
    EXCLAMATION     shift, and go to state 17
    CLOSURE         shift, and go to state 18
    FINAL           shift, and go to state 22

    $default  reduce using rule 99 (expression_opt)

    expression                 go to state 55
    assignment_expression      go to state 27
    logical_or_expression      go to state 28
    logical_and_expression     go to state 29
    equality_expression        go to state 30
    relational_expression      go to state 31
    additive_expression        go to state 32
    multiplicative_expression  go to state 33
    unary_expression           go to state 34
    postfix_expression         go to state 35
    primary_expression         go to state 36
    array_literal              go to state 37
    closure_definition         go to state 38
    expression_opt             go to state 204


state 200

   98 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 70

    block  go to state 205


state 201

   14 expression: expression . COMMA assignment_expression
   93 elsif: ELSIF LP expression . RP block

    RP     shift, and go to state 206
    COMMA  shift, and go to state 77


state 202

   90 if_statement: IF LP expression RP block elsif_list ELSE block .

    $default  reduce using rule 90 (if_statement)


state 203

  106 try_statement: TRY block CATCH LP IDENTIFIER RP block FINALLY . block

    LC  shift, and go to state 70

    block  go to state 207


state 204

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . RP block

    RP  shift, and go to state 208


state 205

   98 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 98 (foreach_statement)


state 206

   93 elsif: ELSIF LP expression RP . block

    LC  shift, and go to state 70

    block  go to state 209


state 207

  106 try_statement: TRY block CATCH LP IDENTIFIER RP block FINALLY block .

    $default  reduce using rule 106 (try_statement)


state 208

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP . block

    LC  shift, and go to state 70

    block  go to state 210


state 209

   93 elsif: ELSIF LP expression RP block .

    $default  reduce using rule 93 (elsif)


state 210

   97 for_statement: label_opt FOR LP expression_opt SEMICOLON expression_opt SEMICOLON expression_opt RP block .

    $default  reduce using rule 97 (for_statement)
